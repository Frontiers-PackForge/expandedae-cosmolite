buildscript {
    repositories {
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'eclipse'
    id 'idea'
    id 'net.minecraftforge.gradle' version '[6.0.16,6.2)'
    id 'org.spongepowered.mixin' version '0.7.+'
}

apply plugin: 'org.spongepowered.mixin'

group = mod_group_id
version = mod_version

base {
    archivesName = mod_id
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {
    mappings channel: mapping_channel, version: mapping_version
    copyIdeResources = true
    runs {
        configureEach {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        client {
            property 'mixin.excludes', 'architectury.mixins.json'
            arg "-mixin.config=mixins.${mod_id}.json"
            arg "-XX:+AllowEnhancedClassRedefinition"
            property 'forge.enabledGameTestNamespaces', mod_id
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'expandedae'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                expandedae {
                    source sourceSets.main
                }
            }
        }

        server {
            property 'forge.enabledGameTestNamespaces', mod_id
            args '--nogui'
            arg "-mixin.config=mixins.${mod_id}.json"
        }
        gameTestServer {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        data {
            workingDirectory project.file('run-data')

            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenLocal()
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/"
    }
    maven {
        url = uri("https://modmaven.dev/")
        content {
            includeGroup "appeng"
            includeGroup "de.mari_023"
        }
    }
    maven { // Registrate
        url "https://maven.tterrag.com/"
    }
    maven {
        name = "Illusive Soulworks maven"
        url = "https://maven.theillusivec4.top/"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    implementation fg.deobf("curse.maven:applied-energistics-2-223794:6357138")
    implementation fg.deobf("curse.maven:ex-pattern-provider-892005:6167228")
    implementation fg.deobf("curse.maven:glodium-957920:5226922")
    implementation fg.deobf("curse.maven:guideme-1173950:6227045")

    implementation fg.deobf("curse.maven:applied-energistics-2-wireless-terminals-459929:5217955")
    implementation fg.deobf("curse.maven:architectury-api-419699:5137938")
    implementation fg.deobf("curse.maven:curios-309927:6418456")

    compileOnly fg.deobf("curse.maven:applied-flux-965012:5989701")
    implementation fg.deobf("curse.maven:geckolib-388172:6027567")
    implementation fg.deobf("curse.maven:mega-cells-622112:6175008")
    implementation fg.deobf("curse.maven:cloth-config-348521:5729105")
    compileOnly fg.deobf("dev.emi:emi-forge:${emi_version}")
    runtimeOnly fg.deobf("dev.emi:emi-forge:${emi_version}")
    implementation 'org.spongepowered:mixin:0.8.5'
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    compileOnly(annotationProcessor("io.github.llamalad7:mixinextras-common:0.4.1"))
    implementation(jarJar("io.github.llamalad7:mixinextras-forge:0.4.1")) {
        jarJar.ranged(it, "[0.4.1,)")
    }
}


tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [minecraft_version   : minecraft_version, minecraft_version_range: minecraft_version_range,
                             forge_version       : forge_version, forge_version_range: forge_version_range,
                             loader_version_range: loader_version_range,
                             mod_id              : mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
                             mod_authors         : mod_authors, mod_description: mod_description,]

    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}


tasks.named('jar', Jar).configure {
    manifest {
        attributes(["Specification-Title"     : mod_id,
                    "Specification-Vendor"    : mod_authors,
                    "Specification-Version"   : "1",
                    "Implementation-Title"    : project.name,
                    "Implementation-Version"  : project.jar.archiveVersion,
                    "Implementation-Vendor"   : mod_authors,
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    finalizedBy 'reobfJar'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
tasks.withType(Jar).configureEach {
    destinationDirectory.set(file("$rootDir/jar"))
}
mixin {
    add sourceSets.main, "mixins.expandedae.refmap.json"
    config "mixins.expandedae.json"
}
jarJar.enable()
reobf {
    jarJar { }
}

tasks.jarJar.finalizedBy('reobfJarJar')